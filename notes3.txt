1)JSON iterate over all for loops
for:  
const cricketer=["Dhoni","Sachin","virat","rohit","jadeja"];
for(let i=0;i<cricketer.length;i++){
    console.log(cricketer[i])
}
for in:
const Team={
    Name:"Dhoni",
    Age : 41,
    Nickname:"Mahi"
}

for(let key in Team){
    console.log(Team[key])
}
for of:
 const Games=["Cricket","Football","Hockey","volleyball","Basketball"]
 for(let value of Games){
     console.log(value);
}
forEach:
let arr=[1,2,3,4,5]
arr.forEach((element)=>console.log(element*2))

 2)Create Your Resume in  JSON Format:
 var resume=[{
    "name"   : "krish",
"nationality":"indian",
    "gender" :"male",
    "marital":"single",
    "hobbies": "Playing Cricket,Music",
"stengths"   :"confidence,hardwoker",
  "languuage":"tamil,english",       
    "email"  : "krish@gmail.com",
    "phone"  : "9856542328",
    "address":"2715 Broadway St",
     "city"  : "chennai",
"countryCode": "US",
     "region": "Hindu",
},
{
"institution": "University",
    "area"   : "Software Development",
"studyType"  : "Bachelor",
    "gpa"    : "8.5",
    "courses": "Full Stack Development",
    "Cname"  : "Web Development",
    "level"  : "Master",
"keywords"   : "HTML,CSS,Javascript"
  }];
  console.log(resume)
  
3)Difference betwwen window,screen and document in Javascript

1)Window:

1)The JavaScript window object sits at the top of the JavaScript Object hierarchy and represents the browser window. 
The window object is supported by all browsers. All global JavaScript objects , functions, and variables automatically 
become members of the window object. The window is the first thing that gets loaded into the browser . This window object 
has the majority of the properties like length, innerWidth, innerHeight, name, if it has been closed, its parents, and more.

2)The window object represents the current browsing context . It holds things like window.location, window.history, 
window.screen, window.status, or the window.document . Each browser tab has its own top-level window object. Each of 
these windows gets its own separate global object. window.window always refers to window, but window.parent and window.
top might refer to enclosing windows, giving access to other execution contexts. Moreover, the window property of a window 
object points to the window object itself. 

2)Document:

The Document interface represents any web page loaded in the browser and serves as an entry point into the
web page's content, which is the DOM tree. When an HTML document is loaded into a web browser, it becomes a document object. 
It is the root node of the HTML document. The document actually gets loaded inside the window object and has properties
available to it like title, URL, cookie, etc. HTML documents, served with the "text/html" content type, also implement 
the HTMLDocument interface, whereas XML and SVG documents implement the XMLDocument interface.

3)Screen:

Screen is a small information object about physical screen dimensions . It can be used to display screen width, height, 
colorDepth, pixelDepth etc. It is not mandatory to write window prefix with screen object. It can be written without 
window prefix.









 
 